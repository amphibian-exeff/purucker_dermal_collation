dag2016_dehy_file <- paste(amphibdir_data_in,"dag2016_data_dehydration.csv", sep="")
file.exists(dag2016_dehy_file)
dag2016_dehy0 <- read.table(dag2016_dehy_file, header = TRUE, sep = ",")
dim(dag2016_dehy0)
colnames(dag2016_dehy0)
summary(dag2016_dehy0)
# import data from Glinski 2017 metabolite study
dag2016_metabolite_file <- paste(amphibdir_data_in,"dag2016_data_metabolites.csv", sep="")
file.exists(dag2016_metabolite_file)
dag2016_metabolite0 <- read.table(dag2016_metabolite_file, header = TRUE, sep = ",")
dim(dag2016_metabolite0)
colnames(dag2016_metabolite0)
summary(dag2016_metabolite0)
# import data from Glinski 2017 metabolite study
dag2016_metabolite_merge_file <- paste(amphibdir_data_in,"dag2016_data_metabolites_4merge.csv", sep="")
file.exists(dag2016_metabolite_merge_file)
dag2016_metabolite_merge <- read.table(dag2016_metabolite_merge_file, header = TRUE, sep = ",")
dim(dag2016_metabolite_merge)
colnames(dag2016_metabolite_merge)
summary(dag2016_metabolite_merge)
# import data from Glinski 2018 biomarkers study
dag2018_biomarkers_file <- paste(amphibdir_data_in,"dag2018_data_biomarkers.csv", sep="")
file.exists(dag2018_biomarkers_file)
dag2018_mbiomarker0 <- read.table(dag2018_biomarkers_file, header = TRUE, sep = ",")
dim(dag2018_mbiomarker0)
colnames(dag2018_mbiomarker0)
summary(dag2018_mbiomarker0)
# import data from Glinski 2019 dermal routes study
dermal_routes_file <- paste(amphibdir_data_in,"dag2019_dermal_routes.csv", sep="")
file.exists(dermal_routes_file)
dermal_routes <- read.table(dermal_routes_file, header = TRUE, sep = ",")
dim(dermal_routes)
names(dermal_routes)
summary(dermal_routes)
app_rates_file <- paste0(amphibdir_data_in, "updated_app_rates.txt")
file.exists(app_rates_file)
app_rates <- read.table(app_rates_file, header = TRUE, sep = ",")
kable(app_rates[, 2:9]) %>%
kable_styling("striped", full_width = F) %>%
pack_rows("Van Meter et al. 2014/2015", 1, 5) %>%
pack_rows("Van Meter et al. 2016", 6, 10) %>%
pack_rows("Van Meter et al. 2018", 11, 15) %>%
pack_rows("Van Meter et al. 2019", 16, 17) %>%
pack_rows("Van Meter et al. 2021", 18, 19) %>%
pack_rows("Henson-Ramsey et al. 2008", 20, 20) %>%
pack_rows("Glinski et al. 2018a", 21, 25) %>%
pack_rows("Glinski et al. 2018b", 26, 28) %>%
pack_rows("Glinski et al. 2019", 29, 34) %>%
pack_rows("Glinski et al. 2020", 35, 37)
##################
# van meter 2014/15
##################
unique(vm2015$Chemical)
# drop metabolites and parents that do not include metabolites
vm2015_chem_drop <- c("Atrazine","Deisopropyl Atrazine","Desethyl Atrazine","Fipronil","Fipronil-Sulfone","Triadimefon","Triadimenol")
chem_vector_drop <- which(vm2015$Chemical %in% vm2015_chem_drop)
vm2015_subset1 <- vm2015[-chem_vector_drop,]
vm2015_subset2 <- droplevels(vm2015_subset1)
dim(vm2015_subset2)
# drop unneeded columns for merging
all_cols <- colnames(vm2015_subset2)
drop_cols <- c("Instrument", "good", "logKow", "BCF", "initialweight",
"Solat20C_mgL", "Solat20C_gL", "molmass_gmol", "Density_gcm3","AppFactor", "SA_cm2", "VapPrs_mPa",
"Koc_gmL", "HalfLife_day", "HabFac")
vm2015_subset3 <- vm2015_subset2[,!(names(vm2015_subset2) %in% drop_cols)]
colnames(vm2015_subset3)
# add columns
soil_type <- c(rep("PLE",nrow(vm2015_subset3)))
formulation <- (rep(0,nrow(vm2015_subset3)))
exp_duration<- (rep(8,nrow(vm2015_subset3)))
source <- c(rep("rvm2015",nrow(vm2015_subset3)))
vm2015_subset4 <- cbind(vm2015_subset3, formulation, soil_type, exp_duration, source)
# standardize column names
colnames(vm2015_subset4)
colnames(vm2015_subset4)[which(colnames(vm2015_subset4)=="Sample")]<-"sample_id"
colnames(vm2015_subset4)[which(colnames(vm2015_subset4)=="Species")]<-"species"
colnames(vm2015_subset4)[which(colnames(vm2015_subset4)=="Chemical")]<-"chemical"
colnames(vm2015_subset4)[which(colnames(vm2015_subset4)=="Application")]<-"application"
colnames(vm2015_subset4)[which(colnames(vm2015_subset4)=="TissueConc")]<-"tissue_conc_ugg"
colnames(vm2015_subset4)[which(colnames(vm2015_subset4)=="SoilConc")]<-"soil_conc_ugg"
colnames(vm2015_subset4)[which(colnames(vm2015_subset4)=="bodyweight")]<-"body_weight_g"
colnames(vm2015_subset4)
# reorder vm2015 alphabetically
vm2015_merge <- vm2015_subset4[,order(names(vm2015_subset4))]
# write a local copy
vm2015_merge_filename <- paste(amphibdir_data_out,"vm2015_merge.csv", sep="")
write.csv(vm2015_merge, file=vm2015_merge_filename)
dim(vm2015_merge)
##################
# van meter 2016
##################
# Reformat vm2016 for merge with vm2015
dim(vm2016)
colnames(vm2016)
# add sample_id
vm2016$sample_id <- paste(vm2016$Day, vm2016$Row, vm2016$Column, sep="_")
vm2016_subset2 <- subset(vm2016, select=c(-Day,-Row, -Column, -Total))
# add additional columns
species <- c(rep("American toad",nrow(vm2016_subset2)))
application <- c(rep("Indirect",nrow(vm2016_subset2)))
exp_duration<- (rep(8,nrow(vm2016_subset2)))
source <- c(rep("rvm2016",nrow(vm2016_subset2)))
vm2016_subset3 <- cbind(vm2016_subset2, species, application, exp_duration, source)
# assign values to application rate
#unique(vm2016_subset3$Pesticide)
vm2016_subset3$app_rate_g_cm2[vm2016_subset3$Pesticide=="ATZTOT"] <- 22.9e-6
vm2016_subset3$app_rate_g_cm2[vm2016_subset3$Pesticide=="Imid"] <- 5.7e-6
vm2016_subset3$app_rate_g_cm2[vm2016_subset3$Pesticide=="FipTOT"] <- 1.1e-6
vm2016_subset3$app_rate_g_cm2[vm2016_subset3$Pesticide=="TNDTOT"] <- 2.7e-6
vm2016_subset3$app_rate_g_cm2[vm2016_subset3$Pesticide=="Pendi"] <- 69.8e-6
# drop decay products that were not sprayed, keeping only parents
rows_to_drop <- which(vm2016_subset3$Parent == 0)
vm2016_subset4 <- vm2016_subset3[-rows_to_drop,]
# drop ATZ, Fip, TDN since do not include metabolites in total
chems_to_drop <- c("ATZ","Fip","TDN")
vm2016_subset5 <- vm2016_subset4[!(vm2016_subset4$Pesticide %in% chems_to_drop),]
# drop parent field
drop_cols <- c("Parent")
vm2016_subset6 <- vm2016_subset5[,!(names(vm2016_subset5) %in% drop_cols)]
# standardize column names
colnames(vm2016_subset6)
colnames(vm2016_subset6)[which(colnames(vm2016_subset6)=="Pesticide")]<-"chemical"
colnames(vm2016_subset6)[which(colnames(vm2016_subset6)=="SoilType")]<-"soil_type"
colnames(vm2016_subset6)[which(colnames(vm2016_subset6)=="BodyBurden")]<-"tissue_conc_ugg"
colnames(vm2016_subset6)[which(colnames(vm2016_subset6)=="Soil")]<-"soil_conc_ugg"
colnames(vm2016_subset6)[which(colnames(vm2016_subset6)=="Weight")]<-"body_weight_g"
colnames(vm2016_subset6)[which(colnames(vm2016_subset6)=="Formulation")]<-"formulation"
# alter chemical name
vm2016_subset6$chemical <- as.character(vm2016_subset6$chemical)
vm2016_subset6$chemical[vm2016_subset6$chemical=="Imid"] <- "imidacloprid"
# reorder columns alphabetically to help with merge
colnames(vm2016_subset6)
vm2016_merge <- vm2016_subset6[,order(names(vm2016_subset6))]
colnames(vm2016_merge)
# write a local copy
vm2016_merge_filename <- paste(amphibdir_data_out,"vm2016_merge.csv", sep="")
write.csv(vm2016_merge, file=vm2016_merge_filename)
dim(vm2016_merge)
colnames(vm2015_merge)
colnames(vm2016_merge)
dim(vm2015_merge)
dim(vm2016_merge)
# combine two dataframes
combined_data0 <- rbind(vm2015_merge, vm2016_merge)
dim(combined_data0)
colnames(combined_data0)
#View(combined_data0)
combined_data_filename0 <- paste(amphibdir_data_out,"combined_data0.csv", sep="")
write.csv(combined_data0, file=combined_data_filename0)
dim(combined_data0)
##################
# glinski et al 2018a dehydration
##################
# Revise dag2016_dehy to merge with van meter data sets
dim(dag2016_dehy0)
colnames(dag2016_dehy0)
#from
#[1] "time"    "parent"  "analyte" "matrix"  "species" "conc"    "ID"      "weight"
#to
# [1] "chemical"        "soil_type"       "tissue_conc_ugg" "soil_conc_ugg"   "body_weight_g"
# [6] "formulation"     "species"         "application"     "exp_duration"    "app_rate_g_cm2"
# drop metabolite products
parent_keepers <- which(as.vector(dag2016_dehy0$parent) == as.vector(dag2016_dehy0$analyte))
dag2016_dehy1 <- dag2016_dehy0[parent_keepers,]
## time is length of dehydration
#colnames(dag2016_dehy1)[which(colnames(dag2016_dehy1)=="time")]<-"exp_duration"
# standardize column names
colnames(dag2016_dehy1)[which(colnames(dag2016_dehy1)=="analyte")]<-"chemical"
colnames(dag2016_dehy1)[which(colnames(dag2016_dehy1)=="conc")]<-"tissue_conc_ugg"
colnames(dag2016_dehy1)[which(colnames(dag2016_dehy1)=="ID")]<-"sample_id"
colnames(dag2016_dehy1)[which(colnames(dag2016_dehy1)=="weight")]<-"body_weight_g"
# add additional columns
exp_duration <- c(rep(8,nrow(dag2016_dehy1)))
soil_type <- c(rep("PLE",nrow(dag2016_dehy1)))
application <- c(rep("Indirect",nrow(dag2016_dehy1)))
formulation <- (rep(0,nrow(dag2016_dehy1)))
app_rate_g_cm2 <- (rep(0,nrow(dag2016_dehy1)))
soil_conc_ugg <- (rep(0,nrow(dag2016_dehy1)))
source <- c(rep("dag_dehydration",nrow(dag2016_dehy1)))
dag2016_dehy2 <- cbind(dag2016_dehy1, formulation, soil_type, application,
app_rate_g_cm2, exp_duration, soil_conc_ugg, source)
dim(dag2016_dehy2)
#reshape- cast takes long-format data and casts it into wide-format data
# matrix used to split to soil and amphibian conc columns and delete
# conc split to soil and amphibian conc columns
#make wide with soil and amphib concentrations
colnames(dag2016_dehy2)
#multiple soil concentration observations per id
#dag2016_dehy_mergefail <- dcast(dag2016_dehy3,
#                       tissue_conc_ugg + sample_id + species + chemical + exp_duration ~ matrix,
#                       value.var = c("tissue_conc_ugg"))
#View(dag2016_mergefail)
# drop the soil until we can do a many-to-one merge of soil concentrations
# drop decay products that were not sprayed, keeping only parents
rows_to_drop <- which(dag2016_dehy2$matrix == 'soil')
dag2016_dehy3 <- dag2016_dehy2[-rows_to_drop,]
# parent, time and matrix columns delete
drop_cols <- c("parent","time","matrix")
dag2016_dehy4 <- dag2016_dehy3[,!(names(dag2016_dehy3) %in% drop_cols)]
dim(dag2016_dehy4)
# fill in application rates
#unique(dag2016_dehy4$chemical)
update_atrazine <- which(dag2016_dehy4$chemical == 'atrazine')
dag2016_dehy4$app_rate_g_cm2[update_atrazine] <- 0.00002395 # atrazine g/cm2
update_chloro <- which(dag2016_dehy4$chemical == 'chloro+d')
dag2016_dehy4$app_rate_g_cm2[update_chloro] <-  0.0000443 # chloro g/cm2
update_metol <- which(dag2016_dehy4$chemical == 'metol')
dag2016_dehy4$app_rate_g_cm2[update_metol] <-  0.00003101 # metol g/cm2
update_tdn <- which(dag2016_dehy4$chemical == 'tdn')
dag2016_dehy4$app_rate_g_cm2[update_tdn] <- 0.00000291 # tdn g/cm2
update_imid <- which(dag2016_dehy4$chemical == 'imid')
dag2016_dehy4$app_rate_g_cm2[update_imid] <- 0.00000539 # imid g/cm2
# add back in soil concentrations (in already-made soil_conc_ugg column)
dag2016_soil <- dag2016_dehy2[rows_to_drop,]
dag2016_dehy4$soil_conc_ugg <- dag2016_soil$tissue_conc_ugg
# rename species names, according to standardized names
dag2016_dehy4$species <- as.character(dag2016_dehy4$species)
dag2016_dehy4$species[dag2016_dehy4$species == "LF"] <- "Leopard frog"
dag2016_dehy4$species[dag2016_dehy4$species == "BA"] <- "Fowlers toad"
dag2016_dehy4$species <- as.factor(dag2016_dehy4$species)
# check soil concentrations
colnames(dag2016_soil)
dag2016_soil$tissue_conc_ugg
#View(cbind(as.vector(dag2016_dehy4$sample_id),as.vector(dag2016_dehy4$sample_id)))
#View(cbind(dag2016_dehy4$tissue_conc_ugg,dag2016_dehy4$soil_conc_ugg))
bcf <- dag2016_dehy4$tissue_conc_ugg/dag2016_dehy4$soil_conc_ugg
min(bcf)
max(bcf)
# reorder columns alphabetically to help with merge
colnames(dag2016_dehy4)
dag2016_dehy_merge <- dag2016_dehy4[,order(names(dag2016_dehy4))]
dim(dag2016_dehy_merge)
colnames(dag2016_dehy_merge)
# write a local copy
dag2016_dehy_merge_filename <- paste(amphibdir_data_out,"dag2016_dehy_merge.csv", sep="")
write.csv(dag2016_dehy_merge, dag2016_dehy_merge_filename)
dim(dag2016_dehy_merge)
colnames(combined_data0)
colnames(dag2016_dehy_merge)
dim(combined_data0)
dim(dag2016_dehy_merge)
# combine two dataframes
combined_data1 <- rbind(combined_data0, dag2016_dehy_merge)
dim(combined_data1)
colnames(combined_data1)
rownames(combined_data1) <- seq(length=nrow(combined_data1))
combined_data_filename1 <- paste(amphibdir_data_out,"combined_data1.csv", sep="")
write.csv(combined_data1, file=combined_data_filename1)
dim(combined_data1)
colnames(combined_data1)
colnames(hr2008)
dim(combined_data1)
dim(hr2008)
# combine two dataframes
combined_data2 <- rbind(combined_data1, hr2008)
dim(combined_data2)
colnames(combined_data2)
rownames(combined_data2) <- seq(length=nrow(combined_data2))
colnames(combined_data2)
combined_data_filename2 <- paste(amphibdir_data_out,"combined_data2.csv", sep="")
write.csv(combined_data2, file=combined_data_filename2)
dim(combined_data2)
##################
# glinski et al 2018b metabolites
##################
dim(dag2016_metabolite_merge)
colnames(dag2016_metabolite_merge)
# rename species names, according to standardized names
dag2016_metabolite_merge$species <- as.character(dag2016_metabolite_merge$species)
dag2016_metabolite_merge$species[dag2016_metabolite_merge$species == "Anaxyrus_fowleri"] <- "Fowlers toad"
dag2016_metabolite_merge$species <- as.factor(dag2016_metabolite_merge$species)
# combine two dataframes
combined_data3 <- rbind(combined_data2, dag2016_metabolite_merge)
dim(combined_data3)
colnames(combined_data3)
rownames(combined_data3) <- seq(length=nrow(combined_data3))
colnames(combined_data3)
combined_data_filename3 <- paste(amphibdir_data_out,"combined_data3.csv", sep="")
write.csv(combined_data3, file=combined_data_filename3)
dim(combined_data3)
##################
# glinski et al 2019 biomarkers
##################
# import data
dag_biomarkers_file <- paste(amphibdir_data_in,"dag2018_data_biomarkers.csv", sep="")
file.exists(dag_biomarkers_file)
dag_biomarker <- read.table(dag_biomarkers_file, header = TRUE, sep = ",")
# look at data
dim(dag_biomarker)
names(dag_biomarker)
summary(dag_biomarker)
# drop columns
drop_cols <- c("met", "tdt", "bif", "rate", "group")
dag_biomarker_subset <- dag_biomarker[, !(names(dag_biomarker) %in% drop_cols)]
# standardize column names
colnames(dag_biomarker_subset)[which(colnames(dag_biomarker_subset)=="conc")]<-"tissue_conc_ugg"
colnames(dag_biomarker_subset)[which(colnames(dag_biomarker_subset)=="frog.weight")]<-"body_weight_g"
names(dag_biomarker_subset)
dim(dag_biomarker_subset)
## import data (contains soil concentrations and application rates)
dag_biomarkers_file2 <- paste(amphibdir_data_in,"dag2018_data_biomarkers_2.csv", sep="")
file.exists(dag_biomarkers_file2)
dag_biomarker2 <- read.table(dag_biomarkers_file2, header = TRUE, sep = ",")
## look at data
dim(dag_biomarker2)
names(dag_biomarker2)
summary(dag_biomarker2)
dag_biomarker2_update <- replace.value(dag_biomarker2, "app.rate.met", from=55.106, to=3.062e-5, verbose=TRUE)
dag_biomarker2_update <- replace.value(dag_biomarker2_update, "app.rate.met", from=5.5106, to=3.062e-6, verbose=FALSE)
dag_biomarker2_update <- replace.value(dag_biomarker2_update, "app.rate.tdn", from=5.173, to=2.87e-6, verbose=FALSE)
dag_biomarker2_update <- replace.value(dag_biomarker2_update, "app.rate.tdn", from=.5173, to=2.87e-7, verbose=FALSE)
dag_biomarker2_update <- replace.value(dag_biomarker2_update, "app.rate.bif", from=6.209, to=3.45e-6, verbose=FALSE)
dag_biomarker2_update <- replace.value(dag_biomarker2_update, "app.rate.bif", from=.6209, to=3.45e-7, verbose=FALSE)
# bif extraction
dag_biomarker_subset_bif <- dag_biomarker_subset[dag_biomarker_subset$pesticide == "bif", ]
dag_biomarker2_subset_bif <- dag_biomarker2_update[dag_biomarker2_update$BIF != 0, ]
dag_biomarker_bif_merge <- merge(x = dag_biomarker_subset_bif, y = dag_biomarker2_subset_bif,
by.x = "sample_id", by.y = "SAMPLE", all.x = TRUE)
# met extraction
dag_biomarker_subset_met <- dag_biomarker_subset[dag_biomarker_subset$pesticide == "met", ]
dag_biomarker2_subset_met <- dag_biomarker2_update[dag_biomarker2_update$Met != 0, ]
dag_biomarker_met_merge <- merge(x = dag_biomarker_subset_met, y = dag_biomarker2_subset_met,
by.x = "sample_id", by.y = "SAMPLE", all.x = TRUE)
# tdt extraction
dag_biomarker_subset_tdt <- dag_biomarker_subset[dag_biomarker_subset$pesticide == "tdt", ]
dag_biomarker2_subset_tdt <- dag_biomarker2_update[dag_biomarker2_update$TDN != 0, ]
dag_biomarker_tdt_merge <- merge(x = dag_biomarker_subset_tdt, y = dag_biomarker2_subset_tdt,
by.x = "sample_id", by.y = "SAMPLE", all.x = TRUE)
# combine bif, met, and tdt
app_bind_bmt <- c(dag_biomarker_bif_merge[,"app.rate.bif"],
dag_biomarker_met_merge[,"app.rate.met"], dag_biomarker_tdt_merge[,"app.rate.tdn"])
soil_bind_bmt <- c(dag_biomarker_bif_merge[,"BIF.soil"],
dag_biomarker_met_merge[,"Met.soil"], dag_biomarker_tdt_merge[,"TDN.soil"])
# join app and soil vectors to data set
dag_biomarker_subset2 <- dag_biomarker_subset[order(dag_biomarker_subset[, 3]),]
rownames(dag_biomarker_subset2) <- seq(length=nrow(dag_biomarker_subset2))
dag_biomarker_subset3 <- cbind(dag_biomarker_subset2, app_bind_bmt, soil_bind_bmt)
# standardize column names
colnames(dag_biomarker_subset3)[which(colnames(dag_biomarker_subset3)=="app_bind_bmt")]<-"app_rate_g_cm2"
colnames(dag_biomarker_subset3)[which(colnames(dag_biomarker_subset3)=="soil_bind_bmt")]<-"soil_conc_ugg"
# look at data
names(dag_biomarker_subset3)
dim(dag_biomarker_subset3)
# create new columns
application <- c(rep("soil", nrow(dag_biomarker_subset3)))
exp_duration <- c(rep(8, nrow(dag_biomarker_subset3)))
formulation <- c(rep(0, nrow(dag_biomarker_subset3)))
soil_type <- c(rep(NA, nrow(dag_biomarker_subset3)))
source <- c(rep("dag_biomarker", nrow(dag_biomarker_subset3)))
species <- c(rep("Leopard frog", nrow(dag_biomarker_subset3)))
# combine columns
dag_biomarker_subset4 <- cbind(dag_biomarker_subset3, application, exp_duration,
formulation, soil_type, source, species)
# standardize pesticide column
dag_biomarker_subset4$pesticide <- as.character(dag_biomarker_subset4$pesticide)
dag_biomarker_subset4$pesticide[dag_biomarker_subset4$pesticide == "bif"] <- "Bifenthrin"
dag_biomarker_subset4$pesticide[dag_biomarker_subset4$pesticide == "met"] <- "Metolachlor"
dag_biomarker_subset4$pesticide[dag_biomarker_subset4$pesticide == "tdt"] <- "Triadimefon"
colnames(dag_biomarker_subset4)[which(colnames(dag_biomarker_subset4)=="pesticide")]<-"chemical"
# unite function for sample id and chemical
dag_biomarker_subset5 <- unite(data = dag_biomarker_subset4, col = "sample_id", "sample_id", "chemical", sep = " ", remove = FALSE)
# order columns in abc for merge
dag_biomarker_merge <- dag_biomarker_subset5[ ,order(names(dag_biomarker_subset5))]
# write a local copy
dag_biomarker_merge_filename <- paste(amphibdir_data_out,"dag_biomarker_merge.csv", sep="")
write.csv(dag_biomarker_merge, file = dag_biomarker_merge_filename)
names(dag_biomarker_merge)
dim(dag_biomarker_merge)
# combine data frames
combined_data4 <- rbind(combined_data3, dag_biomarker_merge)
dim(combined_data4)
colnames(combined_data4)
rownames(combined_data4) <- seq(length=nrow(combined_data4))
colnames(combined_data4)
combined_data_filename4 <- paste(amphibdir_data_out,"combined_data4.csv", sep="")
write.csv(combined_data4, file=combined_data_filename4)
dim(combined_data4)
##################
# van meter et al 2017 multi-pesticide study merge
##################
dim(rvm2017_merge)
colnames(rvm2017_merge)
# combine two dataframes
combined_data5 <- rbind(combined_data4, rvm2017_merge)
dim(combined_data5)
colnames(combined_data5)
rownames(combined_data5) <- seq(length=nrow(combined_data5))
colnames(combined_data5)
combined_data_filename5 <- paste(amphibdir_data_out,"combined_data5.csv", sep="")
write.csv(combined_data5, file=combined_data_filename5)
dim(combined_data5)
#import dermal routes data, with amphibians weights
weights_file <- paste(amphibdir_data_in, "Dermal_routes_weights.csv", sep = "")
file.exists(weights_file)
weights <- read.table(weights_file, header = TRUE, sep = ",")
dim(weights)
names(weights)
summary(weights)
# merge (one-to-many) dermal routes data with weights data, based on Sample ID
dermal_routes_subset2 <- dermal_routes[order(dermal_routes$Sample.ID), ]
weights_2 <- weights[order(weights$Sample),]
dermal_routes_subset3 <- merge(dermal_routes_subset2, weights_2,
by.x = "Sample.ID", by.y = "Sample", all.x = TRUE, all.y = TRUE)
dim(dermal_routes_subset3)
# subset soil to be used later for soil concentration column (will use "Concentration" column)
soil_subset <- dermal_routes_subset2[dermal_routes_subset2$Media == "Soil", ]
soil_subset2 <- soil_subset[soil_subset$Matrix == "Soil",]
dim(soil_subset2)
# want Media == soil because interested in dermal exposure in soil
dermal_routes_subset4 <- dermal_routes_subset3[dermal_routes_subset3$Media == "Soil",]
#sum(dermal_routes_subset3$Media == "Soil") # == 96
#dim(dermal_routes_subset4) # == 96 x 6
# want Matrix == Amphibian because interested in amphib exposure
dermal_routes_subset5 <- dermal_routes_subset4[dermal_routes_subset4$Matrix == "Amphibian", ]
#sum(dermal_routes_subset4$Matrix == "Amphibian") # == 48
#dim(dermal_routes_subset5) # == 48 x 6
dim(dermal_routes_subset5)
# add in soil concentration column, previously subset
# order by Sample.ID, then by Analyte name to match up rows for the two data sets
dermal_routes_subset6 <- dermal_routes_subset5[order(dermal_routes_subset5[,1],
dermal_routes_subset5[,2]),]
soil_subset3 <- soil_subset2[order(soil_subset2[,1], soil_subset2[,2]),]
#dim(dermal_routes_subset6) # == 48 x 6
#dim(soil_subset3) # == 48 x 5
dermal_routes_subset7 <- cbind(dermal_routes_subset6, soil_subset3$Concentration)
dim(dermal_routes_subset7)
# drop metabolites
rows_to_drop <- c("4-OH", "CPO", "TFSa")
dermal_routes_subset8 <- dermal_routes_subset7[!(dermal_routes_subset7$Analyte %in% rows_to_drop),]
# create new columns
app_rate_g_cm2 <- c(rep(NA, nrow(dermal_routes_subset8)))
application <- c(rep("soil", nrow(dermal_routes_subset8)))
exp_duration <- c(rep(8, nrow(dermal_routes_subset8)))
formulation <- c(rep(0, nrow(dermal_routes_subset8)))
soil_type <- c(rep("OLS", nrow(dermal_routes_subset8)))
source <- c(rep("dag_dermal_routes", nrow(dermal_routes_subset8)))
species <- c(rep("Leopard frog", nrow(dermal_routes_subset8)))
# alter existing column names
colnames(dermal_routes_subset8)
colnames(dermal_routes_subset8)[which(colnames(dermal_routes_subset8)=="Analyte")]<-"chemical"
colnames(dermal_routes_subset8)[which(colnames(dermal_routes_subset8)=="Sample.ID")]<-"sample_id"
colnames(dermal_routes_subset8)[which(colnames(dermal_routes_subset8)=="Concentration")]<-"tissue_conc_ugg"
colnames(dermal_routes_subset8)[which(colnames(dermal_routes_subset8)=="soil_subset3$Concentration")]<-"soil_conc_ugg"
colnames(dermal_routes_subset8)[which(colnames(dermal_routes_subset8)=="Weight_g")]<-"body_weight_g"
# combine columns
dermal_routes_subset9 <- cbind(dermal_routes_subset8, app_rate_g_cm2, application, exp_duration,
formulation, soil_type, source, species)
names(dermal_routes_subset9)
# drop columns
cols_to_drop <- c("Matrix", "Media")
dermal_routes_subset10 <- dermal_routes_subset9[, !(names(dermal_routes_subset9) %in% cols_to_drop)]
# insert application rates
dermal_routes_subset10$chemical <- as.character(dermal_routes_subset10$chemical)
unique(dermal_routes_subset10$chemical)
dermal_routes_subset10$app_rate_g_cm2[dermal_routes_subset10$chemical =="BIF"] <- 2.8889e-7 #bifenthrin g/cm2
dermal_routes_subset10$app_rate_g_cm2[dermal_routes_subset10$chemical =="CPF"] <- 3.1111e-7 #chlorpyrifos g/cm2
dermal_routes_subset10$app_rate_g_cm2[dermal_routes_subset10$chemical =="TFS"] <- 3.0222e-7 #trifloxystrobin g/cm2
summary(dermal_routes_subset10$app_rate_g_cm2)
# order columns in abc for merge
dermal_routes_merge <- dermal_routes_subset10[ ,order(names(dermal_routes_subset10))]
dim(dermal_routes_merge)
names(dermal_routes_merge)
# write a local copy
dag2019_merge_filename <- paste(amphibdir_data_out,"dag2019_merge.csv", sep="")
write.csv(dermal_routes_merge, file = dag2019_merge_filename)
# combine two dataframes
combined_data6 <- rbind(combined_data5, dermal_routes_merge)
dim(combined_data6)
colnames(combined_data6)
rownames(combined_data6) <- seq(length=nrow(combined_data6))
colnames(combined_data6)
combined_data_filename6 <- paste(amphibdir_data_out,"combined_data6.csv", sep="")
write.csv(combined_data6, file=combined_data_filename6)
dim(combined_data6)
amphib_dermal_collated <- combined_data6
colnames(amphib_dermal_collated)
# check to see if everything ok
summary(amphib_dermal_collated$app_rate_g_cm2)
summary(amphib_dermal_collated$body_weight_g)
summary(amphib_dermal_collated$exp_duration)
summary(amphib_dermal_collated$soil_conc_ugg) # 206 NAs
summary(amphib_dermal_collated$tissue_conc_ugg)
# standardize application levels
amphib_dermal_collated$application <- tolower(amphib_dermal_collated$application)
amphib_dermal_collated$application <- as.factor(amphib_dermal_collated$application)
# standardize chemical levels
amphib_dermal_collated$chemical <- as.character(amphib_dermal_collated$chemical)
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "fip"] <- "fipronil"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "BIF"] <- "bifenthrin"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "MET"] <- "metolachlor"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "MAT"] <- "malathion"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "ATZT"] <- "atrazine"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "PROPT"] <- "propiconazole"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "metol"] <- "metolachlor"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "tdn"] <- "triadimefon"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "imid"] <- "imidacloprid"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "chloro+d"] <- "chlorothalonil"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "CPF"] <- "chlorpyrifos"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "TFS"] <- "trifloxystrobin"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "FipTOT"] <- "fipronil"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "ATZTOT"] <- "atrazine"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "TNDTOT"] <- "triadimefon"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "Pendi"] <- "pendimethalin"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "Total Atrazine"] <- "atrazine"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "Total Fipronil"] <- "fipronil"
amphib_dermal_collated$chemical[amphib_dermal_collated$chemical == "Total Triadimefon"] <- "triadimefon"
amphib_dermal_collated$chemical <- tolower(amphib_dermal_collated$chemical)
amphib_dermal_collated$chemical <- as.factor(amphib_dermal_collated$chemical)
#the last step is to add in the most recent datasets
add<-rbind(rvm2019,rvm2021)
updated_amphib_dermal_collated<-rbind(amphib_dermal_collated,add)
View(amphib_dermal_collated)
